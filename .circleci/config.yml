version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5.7-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: postgres
          RAILS_ENV: test
      - image: circleci/postgres:10.4-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: ampled_web_test
          POSTGRES_PASSWORD: ''
      - image: circleci/redis
    working_directory: ~/circleci-demo-workflows
    steps:
      - checkout

      # Restore bundle cache, with fallbacks to increase the likeliness of a cache hit
      - restore_cache:
          keys:
            - gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-{{ arch }}-{{ .Branch }}
            - gem-cache

      # Bundle install dependencies and remove any unused gems
      - run: bundle install --path ./vendor/bundle --jobs=4 && bundle clean --force

      # Store bundle cache
      - save_cache:
          key: gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle

      - run: bundle exec rake db:create db:schema:load # setup database
      - run:
          name: Run tests
          command: bundle exec rake
      - run: bundle exec rubocop

  deploy:
    machine:
      enabled: true
    working_directory: ~/circleci-demo-workflows
    environment:
      HEROKU_APP: 'ampled-web'
    steps:
      - checkout
      - run:
          name: Deploy Development to Staging/Acceptance
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP.git development:master

  deploy-production:
    machine:
      enabled: true
    working_directory: ~/circleci-demo-workflows
    environment:
      HEROKU_APP: 'ampled-web-prod'
    steps:
      - checkout
      - run:
          name: Deploy Master to Production
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP.git master:master

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: development
  build-and-deploy-production:
    jobs:
      - build
      - deploy-production:
          requires:
            - build
          filters:
            branches:
              only: master
